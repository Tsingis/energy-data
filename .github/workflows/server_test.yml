name: server-test
on:
  pull_request:
    branches:
      - master
    paths:
      - "server/src/**"
      - "server/tests/**"
      - "server/requirements.txt"
      - ".github/workflows/server_test.yml"
  workflow_dispatch:
env:
  PIP_DISABLE_PIP_VERSION_CHECK: 1
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          architecture: "x64"
          cache: "pip"
          cache-dependency-path: "./server/requirements.txt"
      - name: Cache dependencies
        id: deps-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('server/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        if: steps.deps-cache.outputs.cache-hit != 'true'
        run: pip install --prefer-binary -r requirements.txt
        working-directory: ./server
  check:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          architecture: "x64"
          cache: "pip"
          cache-dependency-path: "./server/requirements.txt"
      - name: Restore dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('server/requirements.txt') }}
      - name: Install dependencies
        run: pip install --prefer-binary -r requirements.txt
        working-directory: ./server
      - name: Install tools
        run: pip install --prefer-binary flake8 black
        working-directory: ./server
      - name: Check linting & formatting
        run: |
          flake8 .
          black --check .
        working-directory: ./server
  unit-tests:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          architecture: "x64"
          cache: "pip"
          cache-dependency-path: "./server/requirements.txt"
      - name: Restore dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('server/requirements.txt') }}
      - name: Install dependencies
        run: pip install --prefer-binary -r requirements.txt
        working-directory: ./server
      - name: Run unit tests
        run: python -m unittest discover -s tests/unit
        working-directory: ./server
  api-tests:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          architecture: "x64"
          cache: "pip"
          cache-dependency-path: "./server/requirements.txt"
      - name: Restore dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('server/requirements.txt') }}
      - name: Install dependencies
        run: pip install --prefer-binary -r requirements.txt
        working-directory: ./server
      - name: Run API tests
        env:
          FINGRID_API_KEY: ${{ secrets.FINGRID_API_KEY }}
        run: python -m unittest discover -s tests/api
        working-directory: ./server
